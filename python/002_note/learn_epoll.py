"""
IO多路复用：在没有开辟多进程、多线程的前提下，能完成并发服务器的开发。

tornado异步原理
tornado底层通过epoll监听其监听列表中的所有soket，epoll是linux操作系统提供的监听多个socket的接口，因为epool ioloop可以同时监听上千个socket，加上ioloop的异步机制使得tornado成为高并发的webserver。

I/O多路复用
如果一个I/O流进来，我们就开启一个进程处理这个I/O流。那么假设现在有一百万个I/O流进来，那我们就需要开启一百万个进程一一对应处理这些I/O流（——这就是传统意义下的多进程并发处理）。思考一下，一百万个进程，你的CPU占有率会多高，这个实现方式及其的不合理。所以人们提出了I/O多路复用这个模型，一个线程，通过记录I/O流的状态来同时管理多个I/O，可以提高服务器的吞吐能力。

select
select目前几乎在所有的平台上支持，其良好跨平台支持也是它的一个优点。
数量限制32位机默认是1024个。64位机默认是2048
对socket进行扫描时是线性扫描，即采用轮询的方法，效率较低。

poll
没有最大连接数的限制，原因是它是基于链表来存储的
poll还有一个特点是“水平触发”，如果报告了fd后，没有被处理，那么下次poll时会再次报告该fd

epoll
Epoll采用事件触发的机制，通过用户创建Epoll对象并注册事件监听具体事件，以达到事件发生时触发任务的执行。

阻塞I/O模型: 用户线程在读写时被阻塞
非阻塞I/O模型:用户线程不断发起IO请求. 数据未到达时系统返回一状态值; 数据到达后才真正读取数据
I/O复用模型: 一个线程，通过记录I/O流的状态来同时管理多个I/O，可以提高服务器的吞吐能力。
信号驱动I/O模型
异步I/O模型

"""